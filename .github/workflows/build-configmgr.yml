name: Build configmgr
on:
  push:
    branches:
      - v2.x/staging 
      - v2.x/master
      - v2.x/rc 
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'
  

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  check_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            path: copy-repo
            fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

      - name: Get changed files
        id: changed-files
        run: |
            cd copy-repo
            if ${{ github.event_name == 'pull_request' }}; then
                echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
            else
                echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
            fi

      - name: List changed files
        id: set-flag
        run: |
            cd copy-repo
            for file in ${{ steps.changed-files.outputs.changed_files }}; do
                echo "$file was changed"
                if [[ $file == "CHANGELOG.md" ]]
                then
                  echo "file-flag=true" >> $GITHUB_OUTPUT
                  break;
                else
                  echo "file-flag=false" >> $GITHUB_OUTPUT
                fi
            done

      - name: Check if CHANGELOG is Updated and Abort if not updated
        if: steps.set-flag.outputs.file-flag != 'true'
        run: |
          echo "CHANGELOG.md not updated, please update CHANGELOG.md with the changes made in the pull request"
          exit 1

      - name: Remove copy-repo
        if: always()
        run: rm -r copy-repo

  build-test:
    runs-on: ubuntu-latest
    needs: check-permission
    steps: 
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2

      - name: '[Dep 1] Libyaml'
        uses: actions/checkout@v3
        with:
          repository: yaml/libyaml
          path: deps/configmgr/libyaml
          ref: '0.2.5'

      - name: '[Dep 2] Quickjs'
        uses: actions/checkout@v3
        with:
          repository: joenemo/quickjs-portable
          path: deps/configmgr/quickjs
          ref: 'main'

      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}

      - name: '[Prep 3] Set date'
        id: date
        run: echo "date=$(date +'%Y%m%d%S')" >> $GITHUB_OUTPUT

      - name: '[Prep 4] Set version'
        id: version
        run: echo "version=$(cat build/configmgr.proj.env | grep VERSION | cut -f 2 -d=)" >> $GITHUB_OUTPUT

      - name: '[Prep 5] Set branchname'
        id: branch
        run: echo "branch=$(if [ -n '${{ github.head_ref }}' ]; then echo '${{ github.head_ref }}' | tr '[:lower:]' '[:upper:]'; else echo '${{ github.ref_name }}' | tr '[:lower:]' '[:upper:]'; fi | sed 's@/@-@g')" >> $GITHUB_OUTPUT


      - name: '[Prep 6] Prepare workflow'
        uses: zowe-actions/shared-actions/prepare-workflow@main
      

      - name: '[Packaging] Make pax'
        uses: zowe-actions/shared-actions/make-pax@main
        with:
          pax-name: 'configmgr'
          pax-options: '-x os390 -pp'
          pax-local-workspace: './.pax/configmgr'
          pax-ssh-username: ${{ secrets.SSH_MARIST_USERNAME }}
          pax-ssh-password: ${{ secrets.SSH_MARIST_RACF_PASSWORD }}

      - name: '[Publish] Publish'
        uses: zowe-actions/shared-actions/publish@main
        if: success()
        with:
          artifacts: |
            .pax/configmgr/configmgr.pax
          publish-target-path-pattern: libs-snapshot-local/org/zowe/configmgr/${{ steps.version.outputs.version }}-${{ steps.branch.outputs.branch }}
          publish-target-file-pattern: configmgr-${{ steps.version.outputs.version }}-${{ steps.date.outputs.date }}.pax
          perform-release: ${{ github.event.inputs.PERFORM_RELEASE }}
 
      - name: '[Prep Release] Bump version'
        if: ${{ github.event.inputs.PERFORM_RELEASE == 'true' }}
        uses: zowe-actions/zlux-builds/bump-zis-version@v2.x/main
        with:
          version: 'MINOR'
        env: 
         GITHUB_TOKEN: ${{ secrets.ZOWE_ROBOT_TOKEN }}
